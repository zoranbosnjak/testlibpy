name: Upload Python Package

on:
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@master

      - name: Check versions
        run: |
            v1=$(curl https://test.pypi.org/pypi/libasterix/json | jq '.info | .version')
            echo "Published version: $v1"

            v2=$(cat libs/python/pyproject.toml | grep "^version" | sed -e 's/version = //')
            echo "Current version: $v2"

            if [ "$v1" != "$v2" ]; then
                echo "update=proceed" | tee -a "$GITHUB_OUTPUT";
            else
                echo "update=skip" | tee -a "$GITHUB_OUTPUT";
            fi

      - name: Build release distributions
        run: |
          cd libs/python
          nix-shell
          python -m pip install build
          python -m build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: libs/python/dist/

  pypi-publish:
    if: ${{ needs.release-build.outputs.update == 'proceed' }}
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      id-token: write

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          packages-dir: dist/

